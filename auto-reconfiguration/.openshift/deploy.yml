---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-app-properties
data:
  application.properties: |-
    management.endpoints.web.exposure.include=*
    spring.datasource.url=jdbc:${URI}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-app
  annotations:
    image.openshift.io/triggers: |-
      [
        {
          "from": {
            "kind": "ImageStreamTag",
            "name": "sample-app:latest"
          },
          "fieldPath": "spec.template.spec.containers[0].image"
        }
      ]
spec:
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      containers:
        - name: main
          image: sample-app:latest
          envFrom:
            - secretRef:
                name: sample-app-uri
          env:
            - name: SPRING_CONFIG_ADDITIONAL_LOCATION
              value: /deployments/config/
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
          volumeMounts:
            - name: application-properties
              mountPath: /deployments/config
      volumes:
        - name: application-properties
          configMap:
            name: sample-app-properties
---
apiVersion: v1
kind: Service
metadata:
  name: sample-app
spec:
  type: ClusterIP
  selector:
    app: sample-app
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: sample-app
spec:
  port:
    targetPort: http
  to:
    kind: Service
    name: sample-app